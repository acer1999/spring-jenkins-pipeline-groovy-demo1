pipeline {
    agent any
	environment{
		dockerImage=''
		registry='himanshu1502/spring-jenkins-pipeline-groovy-demo1-1.0'
	}
    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "mvn"
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git url: 'https://github.com/acer1999/spring-jenkins-pipeline-groovy-demo1.git'

                // Run Maven on a Unix agent.
                script{
                if(isUnix()){
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
				}	
                else{
                 bat "mvn -Dmaven.test.failure.ignore=true clean package"
                 }
                 }
            }
            }
            
           
           
         stage('Integration Test') {
            steps {
               
                // Run Maven on a Unix agent.
                script{
                if(isUnix()){
                sh "mvn -Dmaven.test.failure.ignore=true clean verify"
				}	
                else{
                 bat "mvn -Dmaven.test.failure.ignore=true clean verify"
                 }
                 }
            }
        
    	}
    	
    	
    	
    	
    
	 stage('Build docker image'){
            steps{
                script{
			dockerImage = docker.build registry
                }
            }
        }
	    stage('Deploy Docker Image'){
		    steps{
			    script{
				    withCredentials([string(credentialsId: 'himanshu1502', variable: 'dockerhubpwd')]){
					    sh 'docker login -u himanshu1502 -p ${dockerhubpwd}'
				    }
				    sh 'docker push himanshu1502/spring-jenkins-pipeline-groovy-demo1-1.0'
			    }
		    }
	    }

	    
    }
	post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    jacoco(
                    
                    classPattern: '**/target/classes',
                    sourcePattern: '**/src/main/groovy'
                    
                    )
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                    
                }
            }
            
        
}
